Jdeprscan
=========
/opt/java/jdk-9/bin
./jdeprscan
./jdeprscan --list
./jdeprscan --list --for-removal


JShell
======
/opt/java/jdk-9/bin
./jshell
> a = 5 // fail
> int a = 5
> a = 6
> int b = 4
> a + b
> /v
> int add(int x, int y) { return x + y; }
> add(a, b)
> /m
> /edit add
     return x + y + 1;
> class A {}
> new A()
> /edit A
     void hello() { System.out.println("hello"); }
> new A().hello()

autocomplete 
> a // tab
> System.out. // tab
> System.out.pr // tab

jshell commands
/v                  - variables
/m                  - methods
/t                  - types (classes)
/list               - all snippets
/history            - history of commands
/save file.txt      - save snippets to file
/exit               - exit jshell
ls
/open file.txt      - loads saved file
/imports            - show what's imported
/reset              
/list


Http API
========
cd demos/d06_httpApi
j9m
fix 301 - Moved permanently
j9m
async
j9m


Process API
===========
cd demos/d08_processApi
comment "top" and destroy
j9 // list all processes
start htop and top, uncomment top and destroy
j9 // kills top and htop


Stream API
==========
Stream.iterate(0, i -> i < 10, i -> i + 1).forEach(System.out::println)
Stream.iterate(0, i -> i < 10, i -> i + 1).takeWhile(i -> i < 5).forEach(System.out::println)
Stream.iterate(0, i -> i < 10, i -> i + 1).dropWhile(i -> i < 5).forEach(System.out::println)


Modules
=======
cd /opt/java/jdk-9 && ls
cd jmods && ls          // not rt.jar, but modules, here
cd bin && ls
./java -version
./java
./java --list-modules   // java.base module javadoc, get implicitly

cd ~/dev/java9-sort-app-example
cd src
ll -d */    //list directories, modules
Main just with random generator
module-info.java
sh src/build.sh -> just compile jar run // run just java
mess with requires, export

sortprovider -> module-info
require transitive
services -> uses // sortprovider uses service Sort.class
sort.{type} -> provides with

jlink -> uncomment in build.sh, comment in run.sh
sh src/build.sh
cd mlib/link
tree
cd bin
./app
./java
./java -version
./java --list-modules
build without sorts and run
run with sort on modulepath